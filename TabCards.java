/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabCards.java
 *
 * Created on Sep 16, 2013, 10:57:24 PM
 */
package bprm;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kaveh
 */
public class TabCards extends javax.swing.JFrame {

    /** Creates new form TabCards */
    public TabCards() {
        initComponents();
        df.addColumn("");
        tf_workspace.setText(System.getProperty("user.home")+File.separator+"Bprm");
        tf_workspace.setDisabledTextColor(Color.BLACK);
        jProgressBar1.setVisible(false);
//        jTable1=new JTable()
//        {
//            @Override
//    public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
//        Component c = super.prepareRenderer(renderer, row, column);
//        if (c instanceof JComponent) {
//            JComponent jc = (JComponent) c;
//            jc.setToolTipText(getValueAt(row, column).toString());
//        }
//        return c;
//    }
//};
        bcD=new ButtonColumn(jTable1, null, 5);
        bcV=new ButtonColumn(jTable1, null, 4);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        jTable1.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        jTable1.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        jTable1.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        jTable1.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        jTextArea1.requestFocus();
        jButton5.setVisible(false);
        jButton6.setVisible(false);
        cardList=new ArrayList<Card>();
        jButton2.setEnabled(false);
        setTitle("BPR Maker");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        bt_change_workspace = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tf_workspace = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Utils.flashcard_name);
        setResizable(false);

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12));

        jLabel7.setForeground(new java.awt.Color(51, 0, 255));
        jLabel7.setText("www.BrainPower.blogsky.com");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nh(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 102, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bprm/brain.png"))); // NOI18N
        jLabel8.setOpaque(true);

        jLabel9.setBackground(new java.awt.Color(51, 102, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("جعبه لایتنر تصویری قدرت ذهن");
        jLabel9.setOpaque(true);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("برنامه ساخت فلش کارت تصویری نسخه ۰.۹ ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("برنامه ساده ساخت فلش کارت های تصویری با فرمت BRP");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("مخصوص جعبه لایتنر قدرت ذهن برای اندروید");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("برای اطلاعات بیشتر به وبلاگ برنامه مراجعه نمایید");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(143, 143, 143))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jLabel10)
                .addGap(28, 28, 28)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jTabbedPane1.addTab("درباره", jPanel5);

        jPanel3.setFont(new java.awt.Font("Iranian Sans", 0, 12));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("سوال");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("پاسخ");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setToolTipText("");
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("سوال و جواب در فلش کارت ها تنها در یک خط قرار خواهند گرفت\nاین فیلد نمی تواند خالی باشد");
        jScrollPane3.setViewportView(jTextArea1);

        jButton3.setText("Browse");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Browse");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("تصویر پاسخ");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("تصویر سوال");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bprm/add.png"))); // NOI18N
        jButton1.setText("افزودن کارت");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton5.setText("حذف");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton6.setText("حذف");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4)
                        .addComponent(jButton5))
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("افزودن کارت", new javax.swing.ImageIcon(getClass().getResource("/bprm/add.png")), jPanel3); // NOI18N

        jPanel2.setFont(new java.awt.Font("Iranian Sans", 0, 12));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(df);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bprm/document-import.png"))); // NOI18N
        jButton2.setText("ایجاد فلش کارت");
        jButton2.setToolTipText("ساخت فلش کارت BRP");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bprm/document-print.png"))); // NOI18N
        jButton7.setToolTipText("پرینت از لیست کارت ها");
        jButton7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(122, 122, 122)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton7)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("لیست کارت ها", new javax.swing.ImageIcon(getClass().getResource("/bprm/gtk-properties.png")), jPanel2); // NOI18N

        bt_change_workspace.setFont(new java.awt.Font("Tahoma", 1, 12));
        bt_change_workspace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bprm/document-open.png"))); // NOI18N
        bt_change_workspace.setText("تغییر");
        bt_change_workspace.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_change_workspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_change_workspaceActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("مسیر ذخیره فلش کارت :");

        tf_workspace.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tf_workspace.setEnabled(false);
        tf_workspace.setOpaque(false);
        tf_workspace.setRequestFocusEnabled(false);
        tf_workspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_workspaceActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setText("نام فلش کارت :");

        jTextField1.setText(Utils.flashcard_name);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tf_workspace, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addComponent(bt_change_workspace, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_workspace, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_change_workspace)
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(273, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("تنظیمات", new javax.swing.ImageIcon(getClass().getResource("/bprm/edit-cut.png")), jPanel4); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("لیست کارت ها");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       JFileChooser jfc=new JFileChooser();
    jfc.setAcceptAllFileFilterUsed(false);
    jfc.addChoosableFileFilter(new Imagefilter());
    jfc.setAcceptAllFileFilterUsed(true);
    jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
    //jfc.setAcceptAllFileFilterUsed(false);
    int ret=jfc.showOpenDialog(this);
    
    //user selected a file
    if(ret==JFileChooser.APPROVE_OPTION) 
    {
        
        File brp=jfc.getSelectedFile();
        String extension=brp.getName().substring(brp.getName().lastIndexOf(".")+1);
        if(extension.equalsIgnoreCase(Utils.jpeg) || 
                extension.equalsIgnoreCase(Utils.jpg) 
                ||extension.equalsIgnoreCase(Utils.png)
                ||  extension.equalsIgnoreCase(Utils.gif)
                ||  extension.equalsIgnoreCase(Utils.bmp) )
        {
           try {
                        BufferedImage bf=ImageIO.read(brp);
                        BufferedImage resizedImage=resize(bf,jLabel3.getWidth(),jLabel3.getHeight());
                        ImageIcon icon=new ImageIcon(resizedImage); // ADDED
                        jLabel3.setText("");
                        jLabel3.setIcon(icon); // ADDED
                        jButton5.setVisible(true);
                        imq=brp.getAbsolutePath();
                        System.out.println(imq+" added");
                     
                    }
                    catch(IOException e1) {}
        }
        else
        {
            JOptionPane.showMessageDialog(null, "فایل نامعتبر است");
        }
        
                
    }
    //no file selected by user
    else
    {
        
    }
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
               JFileChooser jfc=new JFileChooser();
    jfc.setAcceptAllFileFilterUsed(false);
    jfc.addChoosableFileFilter(new Imagefilter());
    jfc.setAcceptAllFileFilterUsed(false);
    jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
    int ret=jfc.showOpenDialog(this);
    
    //user selected a file
    if(ret==JFileChooser.APPROVE_OPTION) 
    {
        
        File brp=jfc.getSelectedFile();
        String extension=brp.getName().substring(brp.getName().lastIndexOf(".")+1);
        if(extension.equalsIgnoreCase(Utils.jpeg) || 
                extension.equalsIgnoreCase(Utils.jpg) 
                ||extension.equalsIgnoreCase(Utils.png)
                ||  extension.equalsIgnoreCase(Utils.gif)
                ||  extension.equalsIgnoreCase(Utils.bmp) )
        {
           try {
                        BufferedImage bf=ImageIO.read(brp);
                        BufferedImage resizedImage=resize(bf,jLabel4.getWidth(),jLabel4.getHeight());
                        ImageIcon icon=new ImageIcon(resizedImage); // ADDED
                        jLabel4.setText("");
                        jLabel4.setIcon(icon); // ADDED
                        jButton6.setVisible(true);
                        ima=brp.getAbsolutePath();      
                        System.out.println(ima+" added");
                    }
                    catch(IOException e1) {}
        }
        else
        {
            JOptionPane.showMessageDialog(null, "فایل نامعتبر است");
        }
        
                
    }
    //no file selected by user
    else
    {
        
    }
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    jLabel3.setIcon(null);
    jLabel3.setText("تصویر سوال");
    jButton5.setVisible(false);
    imq="n";
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    jLabel4.setIcon(null);
    jLabel4.setText("تصویر پاسخ");
    jButton6.setVisible(false);
    ima="n";
}//GEN-LAST:event_jButton6ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jTextArea1.getText().toString().trim().equals(""))
        {
            JOptionPane.showMessageDialog(this, "فیلد سوال نمی تواند خالی باشد", "Error", JOptionPane.ERROR_MESSAGE);
        }
        //question field is not empty
        else
        {
            q=jTextArea1.getText().toString().trim();
            a=jTextArea2.getText().toString().trim();
            cur_Card=new Card(q,a,imq,ima);
            if(exist(cur_Card))
            {
                JOptionPane.showMessageDialog(this, "کارتی با سوال همنام وجود دارد" , "Error" , JOptionPane.ERROR_MESSAGE);
            }
            //question not exist. can be added
            else
            {
                cardList.add(cur_Card);
                Object[] ob={ima.equals("n")?"---":ima,imq.equals("n")?"---":imq,a,q,"مشاهده","حذف"};
                df.addRow(ob);
                jTextArea1.setText("");
                jTextArea2.setText("");
                jLabel3.setIcon(null);
                jLabel3.setText("تصویر سوال");
                jButton5.setVisible(false);
                imq="n";
                jLabel4.setIcon(null);
                jLabel4.setText("تصویر پاسخ");
                jButton6.setVisible(false);
                ima="n";    
                jButton2.setEnabled(true);
                JOptionPane.showMessageDialog(this, "کارت با موفقیت افزوده شد" , null , JOptionPane.INFORMATION_MESSAGE);
                System.out.println("+New Card Added");
            }
            
        }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   
    export_flash_card();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            jTable1.print();// TODO add your handling code here:
        } catch (PrinterException ex) {
            Logger.getLogger(TabCards.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton7ActionPerformed

private void tf_workspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_workspaceActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_tf_workspaceActionPerformed

private void bt_change_workspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_change_workspaceActionPerformed
     JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); 
        int showOpenDialog = f.showOpenDialog(null);
        
        if(showOpenDialog==JFileChooser.APPROVE_OPTION)
        {
       File file=f.getSelectedFile();
       if(file.isDirectory())
       {
           if(file.canWrite())
           {
               tf_workspace.setText(file.getAbsolutePath());
           } 
           else
           {
               JOptionPane.showMessageDialog(this, "Permission Denied\n Change path!","Error",JOptionPane.ERROR_MESSAGE);
               System.out.println("Can't write to selected directory, change it");
           }
       }
       else
       {
           JOptionPane.showMessageDialog(this, "Error, No Directory selected");
       }// TODO add your handling code here:
        }
}//GEN-LAST:event_bt_change_workspaceActionPerformed

private void nh(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nh
    Utils.open_weblog();
}//GEN-LAST:event_nh

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new TabCards().setVisible(true);
            }
        });
    }
       public static int count = 0;
    private DefaultTableModel df=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {                "تصویر پاسخ", "تصویر سوال", "پاسخ", "سوال", ""
            }
        ) {
             Class[] types = new Class [] {
               java.lang.String.class, java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.Integer.class , java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true , true
            };

        @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    private ButtonColumn bcD;
    private ButtonColumn bcV;
    public static ArrayList<Card> cardList;
    private String q;
    private String a;
    private String imq="n";
    private String ima="n";
    private Card cur_Card;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_change_workspace;
    private javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public static javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField tf_workspace;
    // End of variables declaration//GEN-END:variables
public static BufferedImage resize(BufferedImage image, int width, int height) {
    BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
    Graphics2D g2d = (Graphics2D) bi.createGraphics();
    g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
    g2d.drawImage(image, 0, 0, width, height, null);
    g2d.dispose();
    return bi;
}

    private boolean exist(Card cur_Card) {
        String f=cur_Card.getFront();
        
        for(int i=1;i<=cardList.size();i++)
        {
            if(f.equalsIgnoreCase(cardList.get(i-1).getFront()))
            {
                return true;
            }
        }
        return false;
    }
//***************************************************************************
    private void export_flash_card() {
       String workspace_path=tf_workspace.getText().toString();
       File workspace=new File(workspace_path);
       System.out.println("WorkSpace path : "+workspace.getAbsolutePath());
       ArrayList<Card> cardList_tmp=new ArrayList<Card>();
       for(int i=0;i<cardList.size();i++)
       {
           cardList_tmp.add(cardList.get(i));
       }
       if(!workspace.exists())
       {
           if(workspace.mkdirs())
           {
               System.out.println("WorkSpace Created.");
           }
           else{
                System.out.println("Error. WorkSpace do\'nt Created.");
                JOptionPane.showMessageDialog(this, "Error");
           }
       }//create workspace and directories 
       //---------------------------------------------------------------------
       	Utils.flashcard_name=jTextField1.getText().toString();
        String dest=workspace_path+File.separator+Utils.flashcard_name+".brp";
         JFileChooser save_fc=new JFileChooser(workspace_path);
         save_fc.setSelectedFile(new File(dest));
         if(save_fc.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
         {
             dest=save_fc.getSelectedFile().getAbsolutePath();
        //--------------------------------------------------------------------
		String f1,b1;
		String line;
                 int response=JOptionPane.YES_OPTION;
		   
                   String overwrite="فلش کارتی با این نام وجود دارد. \n آیا جایگزین شود؟ \n شما می توانید در قسمت تنظیمات نام فلش کارت را تغییر دهید";
		    		File de=new File(dest);
		    		if(de.exists())
                                {
                                     response = JOptionPane.showConfirmDialog(
                    this,
                   overwrite,
                   Utils.flashcard_name,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE);
                                }
            if (response == JOptionPane.YES_OPTION )
            {
                
         jButton2.setEnabled(false);
       System.out.println("Exporting flash card...");
       jProgressBar1.setIndeterminate(true);
       //jProgressBar1.setString("در حال ایجاد فلش کارت...");
       jProgressBar1.setVisible(true);
       //------------------------------------------------------
       
			
                        String tmp_path=workspace_path+File.separator+"tmp_"+Utils.flashcard_name+File.separator;
                        File tmp_dir = new File(tmp_path);
			if(tmp_dir.exists())
                        {
				if (tmp_dir.isDirectory()) {
			        String[] children = tmp_dir.list();
			        for (int i = 0; i < children.length; i++) {
			            new File(tmp_dir, children[i]).delete();
                                    System.out.println("dsf");
			        }
			    }
                        }
                           else       
				if(tmp_dir.mkdirs())
                                    System.out.println("created "+tmp_dir.getAbsolutePath());

       //------------------------------------------------------
                       //------------------------------------------
                       //--copy images
                       String from;
                       String to;
                       int name_img=0;
                       System.out.println("Copying images...");
                       for(int i=0;i<cardList_tmp.size();i++)
                       {
                           from=cardList_tmp.get(i).getImagef();
                           if(!from.equals("n"))
                           {
                               to=tmp_path+name_img;
                               name_img++;
                               Utils.copyFile(from, to);
                               Card tmp_card=new Card(cardList_tmp.get(i));
                               tmp_card.setImagef(to);
                               cardList_tmp.remove(i);
                               cardList_tmp.add(i,tmp_card);
                               
                           }
                            from=cardList_tmp.get(i).getImageb();
                           if(!from.equals("n"))
                           {
                               to=tmp_path+name_img;
                               name_img++;
                               Utils.copyFile(from, to);
                               Card tmp_card=new Card(cardList_tmp.get(i));
                               tmp_card.setImageb(to);
                               cardList_tmp.remove(i);
                               cardList_tmp.add(i,tmp_card);
                           }
                       }
                       System.out.println("Copy images finished.");
                       //------------------------------------------
		File qa= new File(workspace_path , ".qa");
                
		    	
		    try {
		    	FileOutputStream fOut = new FileOutputStream(qa);
		       OutputStreamWriter osw = new OutputStreamWriter(fOut);  
				 for(int i=0;i<cardList_tmp.size();i++)
                                 {
                                    f1=cardList_tmp.get(i).getFront();
				    f1.replace('\n', ' ');	
				    b1=cardList_tmp.get(i).getBack();		
				    b1=b1.replace('\n', ' ');		
			    	    line=f1+","+b1+"\n";
				    try {
				       osw.write(line);
					} catch (IOException e) {}  
                                 }
                                 try {
				osw.flush();
				osw.close();
				} catch (IOException e) {}
                    } catch (FileNotFoundException e1) {}
		    //end create qa file
                    System.out.println(".qa file created successfully");
                    File pi= new File(workspace_path , ".pai");
		    		String[] pa=new String[cardList_tmp.size()*2];
		    		int counter=0;
		    		try {
		    		 FileOutputStream fOut = new FileOutputStream(pi);
		    		    OutputStreamWriter osw = new OutputStreamWriter(fOut);   		
					for(int i=0;i<cardList_tmp.size();i++)
                                        {
				    		f1=cardList_tmp.get(i).getImagef();
				    		b1=cardList_tmp.get(i).getImageb();
				    		pa[counter]=f1;
				    		counter++;
				    		pa[counter]=b1;
				    		counter++;
				    		//Log.v("TAG", f+" "+b1);
				    		line=f1.substring(f1.lastIndexOf(File.separator)+1)+","+b1.substring(b1.lastIndexOf(File.separator)+1)+"\n";
				    		try {
						osw.write(line);
							} catch (IOException e) {}   		
                                        }
					try {
					  osw.flush();
					  osw.close();
						} catch (IOException e) {}
				} catch (FileNotFoundException e1) {}
		    		//end create pai file
                                System.out.println(".pai file created successfully");
		    		ArrayList<String> pathes=new ArrayList<String>();
		    		for(String s : pa)
		    			if(!s.equalsIgnoreCase("n"))
		    			{
		    				pathes.add(s);
		    				//Log.v("dffd", s);
		    			}
		    		String[] img_zip=new String[pathes.size()+2];
		    		img_zip[0]=qa.getAbsolutePath();
		    		img_zip[1]=pi.getAbsolutePath();
		    		for(int i=2;i<(pathes.size()+2);i++)
		    		{
		    			img_zip[i]=pathes.get(i-2);
		    			//Log.v("jh", img_zip[i]);
		    		}
		    		
		    		Compress compress=new Compress(img_zip, dest);
		    		  if(compress.zip())
                                  {
					//end export------------
                                if(qa.exists())
                                    if(qa.delete())
                                        System.out.println(".qa file deleted.");
                                if(pi.exists())
                                    if(pi.delete())
                                        System.out.println(".pi file deleted.");
                                if(tmp_dir.exists())
                                {
				if (tmp_dir.isDirectory()) {
			        String[] children = tmp_dir.list();
			        for (int i = 0; i < children.length; i++) {
			            new File(tmp_dir, children[i]).delete();
                                        }
                                    }
                                if(tmp_dir.delete())
                                System.out.println("tmp directory deleted.");
                                }
                                
                                 jProgressBar1.setVisible(false);
                                  String s1="فلش کارت با موفقیت ایجاد شد";
                                  JOptionPane.showMessageDialog(this, s1 , Utils.flashcard_name , JOptionPane.INFORMATION_MESSAGE);
                                  jButton2.setEnabled(true);
                                  System.out.println("Flash card created successfully");
                                }
                                else
                        {
                                jProgressBar1.setVisible(false);
                                 String s1="فلش کارت به درستی ایجاد نشد.\n دوباره امتحان کنید.";
                                JOptionPane.showMessageDialog(this, s1 , Utils.flashcard_name , JOptionPane.ERROR_MESSAGE);
                                System.out.println("Error Export flash cards!!");
                                jButton2.setEnabled(true);
                 
                        }
                       }
                      
         }        
    }
}
